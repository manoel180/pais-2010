package br.com.pais.entities;

// Generated 06/05/2011 15:49:37 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * Discipulos generated by hbm2java
 */
@Entity
@Table(name = "discipulos", uniqueConstraints = @UniqueConstraint(columnNames = "disCPF"))
public class Discipulos implements java.io.Serializable {

	private Integer disCod;
	private Estadocivil estadocivil;
	private Logradouro logradouro;
	private Discipulos discipulos;

	private Discipulos discipulosByDisConjugecad;
	
	private Funcaoeclesiasticas funcaoeclesiasticas;
	private Formacaoacademica formacaoacademica;
	private Geracoes geracoes;
	
	
	private String disfoto;
	private String disemail;
	private String disnome;
	private String dispai;
	private String disconjuge;
	private String dismae;
	private Date disdatanascimento;
	private char dism12;
	private String disSenha;
	private String disCpf;
	private String disRg;
	private String disTitEleitor;
	private Integer disEndNumero;
	private String disEndComplemento;
	private String disTelFixo;
	private String disTelCelular;
	private String disTelComercial;
	private char disSexo;
	private Integer igrejasIgrcod;
	private Set<Escolalideres> escolalideresesForElCoordenador = new HashSet<Escolalideres>(
			0);
	private Set<Escolalideres> escolalideresesForElMestrePastor = new HashSet<Escolalideres>(
			0);
	private Set<Escolalideres> escolalideresesForElMestre = new HashSet<Escolalideres>(
			0);
	private Set<Bases> basesesForBasDisCod = new HashSet<Bases>(0);
	private Set<Escolalideres> escolalideresesForElPastor = new HashSet<Escolalideres>(
			0);
	private Set<Escolalideres> escolalideresesForElDiscipulador = new HashSet<Escolalideres>(
			0);
	private Set<Escolalideres> escolalideresesForElPastorRequerimento = new HashSet<Escolalideres>(
			0);
	private Set<Discipulos> discipulosesForDisConjugecad = new HashSet<Discipulos>(
			0);
	private Set<Ministra> ministras = new HashSet<Ministra>(0);
	private Set<Escolalideres> escolalideresesForElCoordenadorPastor = new HashSet<Escolalideres>(
			0);
	private Set<Encontrospalestras> encontrospalestrases = new HashSet<Encontrospalestras>(
			0);
	private Set<Inscritos> inscritoses = new HashSet<Inscritos>(0);
	private Set<Lideres> lidereses = new HashSet<Lideres>(0);
	private List<Discipulos> discipuloses;
	private Set<Mensagem> mensagemsForMensDisCodRecebe = new HashSet<Mensagem>(
			0);
	private Set<Mensagem> mensagemsForMensDisCod = new HashSet<Mensagem>(0);
	private Set<Escolalideresdiscipulos> escolalideresdiscipuloses = new HashSet<Escolalideresdiscipulos>(
			0);
	private Set<Celulas> celulases = new HashSet<Celulas>(0);
	private Set<Frequencia> frequencias = new HashSet<Frequencia>(0);
	private Set<Participa> participas = new HashSet<Participa>(0);
	private Set<Celulas> celulases_1 = new HashSet<Celulas>(0);
	private List<Formacaoeclesiasticas> formacaoeclesiasticases;
	private Set<Repasse> repasses = new HashSet<Repasse>(0);
	private Set<Bases> basesesForLiderGovJusto = new HashSet<Bases>(0);
	private Set<Bases> basesesForLiderAcaoSocial = new HashSet<Bases>(0);

	private int totalBases = 0;
	private int totalCelulas = 0;
	private int totalGeracoes = 0;
	private int totalDiscipulos = 0;
	
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "disCod", unique = true, nullable = false)
	public Integer getDisCod() {
		return this.disCod;
	}

	public void setDisCod(Integer disCod) {
		this.disCod = disCod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disEstCivil", nullable = false)
	public Estadocivil getEstadocivil() {
		return this.estadocivil;
	}

	public void setEstadocivil(Estadocivil estadocivil) {
		this.estadocivil = estadocivil;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disEndereco", nullable = false)
	public Logradouro getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(Logradouro logradouro) {
		this.logradouro = logradouro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disFunCod", nullable = false)
	public Funcaoeclesiasticas getFuncaoeclesiasticas() {
		return this.funcaoeclesiasticas;
	}

	public void setFuncaoeclesiasticas(Funcaoeclesiasticas funcaoeclesiasticas) {
		this.funcaoeclesiasticas = funcaoeclesiasticas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "forCod", nullable = false)
	public Formacaoacademica getFormacaoacademica() {
		return this.formacaoacademica;
	}

	public void setFormacaoacademica(Formacaoacademica formacaoacademica) {
		this.formacaoacademica = formacaoacademica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disGeracao")
	public Geracoes getGeracoes() {
		return this.geracoes;
	}

	public void setGeracoes(Geracoes geracoes) {
		this.geracoes = geracoes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disConjugecad")
	public Discipulos getDiscipulosByDisConjugecad() {
		return this.discipulosByDisConjugecad;
	}

	public void setDiscipulosByDisConjugecad(
			Discipulos discipulosByDisConjugecad) {
		this.discipulosByDisConjugecad = discipulosByDisConjugecad;
	}

	@Column(name = "disfoto", length = 100)
	public String getDisfoto() {
		return this.disfoto;
	}

	public void setDisfoto(String disfoto) {
		this.disfoto = disfoto;
	}

	@Column(name = "disemail", length = 60)
	public String getDisemail() {
		return this.disemail;
	}

	public void setDisemail(String disemail) {
		this.disemail = disemail;
	}

	@Column(name = "disnome", nullable = false, length = 60)
	public String getDisnome() {
		return this.disnome;
	}

	public void setDisnome(String disnome) {
		this.disnome = disnome;
	}

	@Column(name = "dispai", length = 60)
	public String getDispai() {
		return this.dispai;
	}

	public void setDispai(String dispai) {
		this.dispai = dispai;
	}

	@Column(name = "disconjuge", length = 60)
	public String getDisconjuge() {
		return this.disconjuge;
	}

	public void setDisconjuge(String disconjuge) {
		this.disconjuge = disconjuge;
	}

	@Column(name = "dismae", nullable = false, length = 60)
	public String getDismae() {
		return this.dismae;
	}

	public void setDismae(String dismae) {
		this.dismae = dismae;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "disdatanascimento", length = 10)
	public Date getDisdatanascimento() {
		return this.disdatanascimento;
	}

	public void setDisdatanascimento(Date disdatanascimento) {
		this.disdatanascimento = disdatanascimento;
	}

	@Column(name = "dism12", nullable = false, length = 1)
	public char getDism12() {
		return this.dism12;
	}

	public void setDism12(char dism12) {
		this.dism12 = dism12;
	}

	@Column(name = "disSenha", length = 32)
	public String getDisSenha() {
		return this.disSenha;
	}

	public void setDisSenha(String disSenha) {
		this.disSenha = disSenha;
	}

	@Column(name = "disCPF", unique = true, nullable = false, length = 14)
	public String getDisCpf() {
		return this.disCpf;
	}

	public void setDisCpf(String disCpf) {
		this.disCpf = disCpf;
	}

	@Column(name = "disRG", length = 11)
	public String getDisRg() {
		return this.disRg;
	}

	public void setDisRg(String disRg) {
		this.disRg = disRg;
	}

	@Column(name = "disTitEleitor", length = 12)
	public String getDisTitEleitor() {
		return this.disTitEleitor;
	}

	public void setDisTitEleitor(String disTitEleitor) {
		this.disTitEleitor = disTitEleitor;
	}

	@Column(name = "disEndNumero")
	public Integer getDisEndNumero() {
		return this.disEndNumero;
	}

	public void setDisEndNumero(Integer disEndNumero) {
		this.disEndNumero = disEndNumero;
	}

	@Column(name = "disEndComplemento", length = 45)
	public String getDisEndComplemento() {
		return this.disEndComplemento;
	}

	public void setDisEndComplemento(String disEndComplemento) {
		this.disEndComplemento = disEndComplemento;
	}

	@Column(name = "disTelFixo", length = 14)
	public String getDisTelFixo() {
		return this.disTelFixo;
	}

	public void setDisTelFixo(String disTelFixo) {
		this.disTelFixo = disTelFixo;
	}

	@Column(name = "disTelCelular", length = 14)
	public String getDisTelCelular() {
		return this.disTelCelular;
	}

	public void setDisTelCelular(String disTelCelular) {
		this.disTelCelular = disTelCelular;
	}

	@Column(name = "disTelComercial", length = 14)
	public String getDisTelComercial() {
		return this.disTelComercial;
	}

	public void setDisTelComercial(String disTelComercial) {
		this.disTelComercial = disTelComercial;
	}

	@Column(name = "disSexo", nullable = false, length = 1)
	public char getDisSexo() {
		return this.disSexo;
	}

	public void setDisSexo(char disSexo) {
		this.disSexo = disSexo;
	}

	@Column(name = "igrejas_igrcod")
	public Integer getIgrejasIgrcod() {
		return this.igrejasIgrcod;
	}

	public void setIgrejasIgrcod(Integer igrejasIgrcod) {
		this.igrejasIgrcod = igrejasIgrcod;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElCoordenador")
	public Set<Escolalideres> getEscolalideresesForElCoordenador() {
		return this.escolalideresesForElCoordenador;
	}

	public void setEscolalideresesForElCoordenador(
			Set<Escolalideres> escolalideresesForElCoordenador) {
		this.escolalideresesForElCoordenador = escolalideresesForElCoordenador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElMestrePastor")
	public Set<Escolalideres> getEscolalideresesForElMestrePastor() {
		return this.escolalideresesForElMestrePastor;
	}

	public void setEscolalideresesForElMestrePastor(
			Set<Escolalideres> escolalideresesForElMestrePastor) {
		this.escolalideresesForElMestrePastor = escolalideresesForElMestrePastor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElMestre")
	public Set<Escolalideres> getEscolalideresesForElMestre() {
		return this.escolalideresesForElMestre;
	}

	public void setEscolalideresesForElMestre(
			Set<Escolalideres> escolalideresesForElMestre) {
		this.escolalideresesForElMestre = escolalideresesForElMestre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByBasDisCod")
	public Set<Bases> getBasesesForBasDisCod() {
		return this.basesesForBasDisCod;
	}

	public void setBasesesForBasDisCod(Set<Bases> basesesForBasDisCod) {
		this.basesesForBasDisCod = basesesForBasDisCod;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElPastor")
	public Set<Escolalideres> getEscolalideresesForElPastor() {
		return this.escolalideresesForElPastor;
	}

	public void setEscolalideresesForElPastor(
			Set<Escolalideres> escolalideresesForElPastor) {
		this.escolalideresesForElPastor = escolalideresesForElPastor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElDiscipulador")
	public Set<Escolalideres> getEscolalideresesForElDiscipulador() {
		return this.escolalideresesForElDiscipulador;
	}

	public void setEscolalideresesForElDiscipulador(
			Set<Escolalideres> escolalideresesForElDiscipulador) {
		this.escolalideresesForElDiscipulador = escolalideresesForElDiscipulador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElPastorRequerimento")
	public Set<Escolalideres> getEscolalideresesForElPastorRequerimento() {
		return this.escolalideresesForElPastorRequerimento;
	}

	public void setEscolalideresesForElPastorRequerimento(
			Set<Escolalideres> escolalideresesForElPastorRequerimento) {
		this.escolalideresesForElPastorRequerimento = escolalideresesForElPastorRequerimento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByDisConjugecad")
	public Set<Discipulos> getDiscipulosesForDisConjugecad() {
		return this.discipulosesForDisConjugecad;
	}

	public void setDiscipulosesForDisConjugecad(
			Set<Discipulos> discipulosesForDisConjugecad) {
		this.discipulosesForDisConjugecad = discipulosesForDisConjugecad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Ministra> getMinistras() {
		return this.ministras;
	}

	public void setMinistras(Set<Ministra> ministras) {
		this.ministras = ministras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByElCoordenadorPastor")
	public Set<Escolalideres> getEscolalideresesForElCoordenadorPastor() {
		return this.escolalideresesForElCoordenadorPastor;
	}

	public void setEscolalideresesForElCoordenadorPastor(
			Set<Escolalideres> escolalideresesForElCoordenadorPastor) {
		this.escolalideresesForElCoordenadorPastor = escolalideresesForElCoordenadorPastor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Encontrospalestras> getEncontrospalestrases() {
		return this.encontrospalestrases;
	}

	public void setEncontrospalestrases(
			Set<Encontrospalestras> encontrospalestrases) {
		this.encontrospalestrases = encontrospalestrases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Inscritos> getInscritoses() {
		return this.inscritoses;
	}

	public void setInscritoses(Set<Inscritos> inscritoses) {
		this.inscritoses = inscritoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Lideres> getLidereses() {
		return this.lidereses;
	}

	public void setLidereses(Set<Lideres> lidereses) {
		this.lidereses = lidereses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public List<Discipulos> getDiscipuloses() {
		return this.discipuloses;
	}

	public void setDiscipuloses(
			List<Discipulos> discipuloses) {
		this.discipuloses = discipuloses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByMensDisCodRecebe")
	public Set<Mensagem> getMensagemsForMensDisCodRecebe() {
		return this.mensagemsForMensDisCodRecebe;
	}

	public void setMensagemsForMensDisCodRecebe(
			Set<Mensagem> mensagemsForMensDisCodRecebe) {
		this.mensagemsForMensDisCodRecebe = mensagemsForMensDisCodRecebe;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByMensDisCod")
	public Set<Mensagem> getMensagemsForMensDisCod() {
		return this.mensagemsForMensDisCod;
	}

	public void setMensagemsForMensDisCod(Set<Mensagem> mensagemsForMensDisCod) {
		this.mensagemsForMensDisCod = mensagemsForMensDisCod;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Escolalideresdiscipulos> getEscolalideresdiscipuloses() {
		return this.escolalideresdiscipuloses;
	}

	public void setEscolalideresdiscipuloses(
			Set<Escolalideresdiscipulos> escolalideresdiscipuloses) {
		this.escolalideresdiscipuloses = escolalideresdiscipuloses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Celulas> getCelulases() {
		return this.celulases;
	}

	public void setCelulases(Set<Celulas> celulases) {
		this.celulases = celulases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Frequencia> getFrequencias() {
		return this.frequencias;
	}

	public void setFrequencias(Set<Frequencia> frequencias) {
		this.frequencias = frequencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Participa> getParticipas() {
		return this.participas;
	}

	public void setParticipas(Set<Participa> participas) {
		this.participas = participas;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "discipuloscelulas", uniqueConstraints = @UniqueConstraint(columnNames = "discipulos"), joinColumns = { @JoinColumn(name = "discipulos", unique = true, nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "celulas", nullable = false, updatable = false) })
	public Set<Celulas> getCelulases_1() {
		return this.celulases_1;
	}

	public void setCelulases_1(Set<Celulas> celulases_1) {
		this.celulases_1 = celulases_1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "foreclesiasticasdiscipulos",  joinColumns = { @JoinColumn(name = "disCod", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "forEcCod", nullable = false, updatable = false) })
	public List<Formacaoeclesiasticas> getFormacaoeclesiasticases() {
		return this.formacaoeclesiasticases;
	}

	public void setFormacaoeclesiasticases(
			List<Formacaoeclesiasticas> formacaoeclesiasticases) {
		this.formacaoeclesiasticases = formacaoeclesiasticases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Repasse> getRepasses() {
		return this.repasses;
	}

	public void setRepasses(Set<Repasse> repasses) {
		this.repasses = repasses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByLiderGovJusto")
	public Set<Bases> getBasesesForLiderGovJusto() {
		return this.basesesForLiderGovJusto;
	}

	public void setBasesesForLiderGovJusto(Set<Bases> basesesForLiderGovJusto) {
		this.basesesForLiderGovJusto = basesesForLiderGovJusto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulosByLiderAcaoSocial")
	public Set<Bases> getBasesesForLiderAcaoSocial() {
		return this.basesesForLiderAcaoSocial;
	}

	public void setBasesesForLiderAcaoSocial(
			Set<Bases> basesesForLiderAcaoSocial) {
		this.basesesForLiderAcaoSocial = basesesForLiderAcaoSocial;
	}

	/**
	 * @return the discipulos
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disdiscipulador")
	public Discipulos getDiscipulos() {
		return discipulos;
	}

	/**
	 * @param discipulos the discipulos to set
	 */
	public void setDiscipulos(Discipulos discipulos) {
		this.discipulos = discipulos;
	}

	/**
	 * @return the totalBases
	 */
	@Transient
	public int getTotalBases() {
		return totalBases;
	}

	/**
	 * @return the totalCelulas
	 */
	@Transient
	public int getTotalCelulas() {
		return this.totalCelulas;
	}

	/**
	 * @return the totalGeracoes
	 */
	@Transient
	public int getTotalGeracoes() {
		return this.totalGeracoes;
	}

	/**
	 * @return the totalDiscipulos
	 */
	@Transient
	public int getTotalDiscipulos() {
		return this.totalDiscipulos;
	}

	/**
	 * @param totalBases the totalBases to set
	 */
	public void setTotalBases(int totalBases) {
		this.totalBases = totalBases;
	}

	/**
	 * @param totalCelulas the totalCelulas to set
	 */
	public void setTotalCelulas(int totalCelulas) {
		this.totalCelulas = totalCelulas;
	}

	/**
	 * @param totalGeracoes the totalGeracoes to set
	 */
	public void setTotalGeracoes(int totalGeracoes) {
		this.totalGeracoes = totalGeracoes;
	}

	/**
	 * @param totalDiscipulos the totalDiscipulos to set
	 */
	public void setTotalDiscipulos(int totalDiscipulos) {
		this.totalDiscipulos = totalDiscipulos;
	}
}
