package br.com.pais.entities;

// Generated 24/05/2011 10:42:25 by Hibernate Tools 3.4.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Encontrospalestras generated by hbm2java
 */
@Entity
@Table(name = "encontrospalestras", catalog = "wwwpais_sistema")
public class Encontrospalestras implements java.io.Serializable {

	private Integer encpalestrasCod;
	private Palestras palestras;
	private Dadosencontros dadosencontros;
	private Discipulos discipulos;
	private Date dataRealizacao;
	private Date horarioRealizacao;
	private Set<Frequencia> frequencias = new HashSet<Frequencia>(0);

	public Encontrospalestras() {
	}

	public Encontrospalestras(Palestras palestras,
			Dadosencontros dadosencontros, Discipulos discipulos) {
		this.palestras = palestras;
		this.dadosencontros = dadosencontros;
		this.discipulos = discipulos;
	}

	public Encontrospalestras(Palestras palestras,
			Dadosencontros dadosencontros, Discipulos discipulos,
			Date dataRealizacao, Date horarioRealizacao,
			Set<Frequencia> frequencias) {
		this.palestras = palestras;
		this.dadosencontros = dadosencontros;
		this.discipulos = discipulos;
		this.dataRealizacao = dataRealizacao;
		this.horarioRealizacao = horarioRealizacao;
		this.frequencias = frequencias;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "encpalestrasCod", unique = true, nullable = false)
	public Integer getEncpalestrasCod() {
		return this.encpalestrasCod;
	}

	public void setEncpalestrasCod(Integer encpalestrasCod) {
		this.encpalestrasCod = encpalestrasCod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "palestras_cod", nullable = false)
	public Palestras getPalestras() {
		return this.palestras;
	}

	public void setPalestras(Palestras palestras) {
		this.palestras = palestras;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dadosencontros_dadenccod", nullable = false)
	public Dadosencontros getDadosencontros() {
		return this.dadosencontros;
	}

	public void setDadosencontros(Dadosencontros dadosencontros) {
		this.dadosencontros = dadosencontros;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "discipulos_disCod", nullable = false)
	public Discipulos getDiscipulos() {
		return this.discipulos;
	}

	public void setDiscipulos(Discipulos discipulos) {
		this.discipulos = discipulos;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataRealizacao", length = 10)
	public Date getDataRealizacao() {
		return this.dataRealizacao;
	}

	public void setDataRealizacao(Date dataRealizacao) {
		this.dataRealizacao = dataRealizacao;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "horarioRealizacao", length = 8)
	public Date getHorarioRealizacao() {
		return this.horarioRealizacao;
	}

	public void setHorarioRealizacao(Date horarioRealizacao) {
		this.horarioRealizacao = horarioRealizacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "encontrospalestras")
	public Set<Frequencia> getFrequencias() {
		return this.frequencias;
	}

	public void setFrequencias(Set<Frequencia> frequencias) {
		this.frequencias = frequencias;
	}

}
