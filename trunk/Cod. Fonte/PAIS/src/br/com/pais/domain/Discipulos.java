package br.com.pais.domain;

// Generated 27/04/2010 23:53:17 by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Discipulos generated by hbm2java
 */
@Entity
@Table(name = "tbl_Discipulos", catalog = "pais")
public class Discipulos implements java.io.Serializable {

	private Integer disCod;
	private EstadoCivil estadoCivil;
	private Discipulos discipulos;
	private Logradouro logradouro;
	private Geracoes geracoes;
	private String disfoto;
	private String disemail;
	private String disnome;
	private String dispai;
	private String disconjuge;
	private String dismae;
	private Date disdatanascimento;
	private char dism12;
	private String disSenha;
	private Set<Repasse> repasses = new HashSet<Repasse>(0);
	private Set<FormacaoEclesiasticas> tblFormacaoEclesiasticases = new HashSet<FormacaoEclesiasticas>(
			0);
	private Set<Discipulos> tblDiscipuloses = new HashSet<Discipulos>(0);
	private Set<Encontros> tblEncontroses = new HashSet<Encontros>(0);
	private Set<FormacaoAcademica> formacaoAcademicas = new HashSet<FormacaoAcademica>(
			0);
	private Set<Documentos> tblDocumentoses = new HashSet<Documentos>(0);
	private Set<FunEclesiasticasDiscipulos> tblFunEclesiasticasDiscipuloses = new HashSet<FunEclesiasticasDiscipulos>(
			0);

	public Discipulos() {
	}

	public Discipulos(EstadoCivil estadoCivil,
			Discipulos discipulos, Logradouro logradouro,
			Geracoes geracoes, String disnome, String dismae,
			Date disdatanascimento, char dism12) {
		this.estadoCivil = estadoCivil;
		this.discipulos = discipulos;
		this.logradouro = logradouro;
		this.geracoes = geracoes;
		this.disnome = disnome;
		this.dismae = dismae;
		this.disdatanascimento = disdatanascimento;
		this.dism12 = dism12;
	}

	public Discipulos(EstadoCivil estadoCivil,
			Discipulos discipulos, Logradouro logradouro,
			Geracoes geracoes, String disfoto, String disemail,
			String disnome, String dispai, String disconjuge, String dismae,
			Date disdatanascimento, char dism12, String disSenha,
			Set<Repasse> repasses,
			Set<FormacaoEclesiasticas> tblFormacaoEclesiasticases,
			Set<Discipulos> tblDiscipuloses,
			Set<Encontros> tblEncontroses,
			Set<FormacaoAcademica> formacaoAcademicas,
			Set<Documentos> tblDocumentoses,
			Set<FunEclesiasticasDiscipulos> tblFunEclesiasticasDiscipuloses) {
		this.estadoCivil = estadoCivil;
		this.discipulos = discipulos;
		this.logradouro = logradouro;
		this.geracoes = geracoes;
		this.disfoto = disfoto;
		this.disemail = disemail;
		this.disnome = disnome;
		this.dispai = dispai;
		this.disconjuge = disconjuge;
		this.dismae = dismae;
		this.disdatanascimento = disdatanascimento;
		this.dism12 = dism12;
		this.disSenha = disSenha;
		this.repasses = repasses;
		this.tblFormacaoEclesiasticases = tblFormacaoEclesiasticases;
		this.tblDiscipuloses = tblDiscipuloses;
		this.tblEncontroses = tblEncontroses;
		this.formacaoAcademicas = formacaoAcademicas;
		this.tblDocumentoses = tblDocumentoses;
		this.tblFunEclesiasticasDiscipuloses = tblFunEclesiasticasDiscipuloses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "disCod", unique = true, nullable = false)
	public Integer getDisCod() {
		return this.disCod;
	}

	public void setDisCod(Integer disCod) {
		this.disCod = disCod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disEstCivil", nullable = false)
	public EstadoCivil getTblEstadoCivil() {
		return this.estadoCivil;
	}

	public void setTblEstadoCivil(EstadoCivil estadoCivil) {
		this.estadoCivil = estadoCivil;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disdiscipulador", nullable = false)
	public Discipulos getTblDiscipulos() {
		return this.discipulos;
	}

	public void setTblDiscipulos(Discipulos discipulos) {
		this.discipulos = discipulos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disEndere√ßo", nullable = false)
	public Logradouro getTblLogradouro() {
		return this.logradouro;
	}

	public void setTblLogradouro(Logradouro logradouro) {
		this.logradouro = logradouro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "disGeracao", nullable = false)
	public Geracoes getTblGeracoes() {
		return this.geracoes;
	}

	public void setTblGeracoes(Geracoes geracoes) {
		this.geracoes = geracoes;
	}

	@Column(name = "disfoto", length = 60)
	public String getDisfoto() {
		return this.disfoto;
	}

	public void setDisfoto(String disfoto) {
		this.disfoto = disfoto;
	}

	@Column(name = "disemail", length = 60)
	public String getDisemail() {
		return this.disemail;
	}

	public void setDisemail(String disemail) {
		this.disemail = disemail;
	}

	@Column(name = "disnome", nullable = false, length = 60)
	public String getDisnome() {
		return this.disnome;
	}

	public void setDisnome(String disnome) {
		this.disnome = disnome;
	}

	@Column(name = "dispai", length = 60)
	public String getDispai() {
		return this.dispai;
	}

	public void setDispai(String dispai) {
		this.dispai = dispai;
	}

	@Column(name = "disconjuge", length = 60)
	public String getDisconjuge() {
		return this.disconjuge;
	}

	public void setDisconjuge(String disconjuge) {
		this.disconjuge = disconjuge;
	}

	@Column(name = "dismae", nullable = false, length = 60)
	public String getDismae() {
		return this.dismae;
	}

	public void setDismae(String dismae) {
		this.dismae = dismae;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "disdatanascimento", nullable = false, length = 10)
	public Date getDisdatanascimento() {
		return this.disdatanascimento;
	}

	public void setDisdatanascimento(Date disdatanascimento) {
		this.disdatanascimento = disdatanascimento;
	}

	@Column(name = "dism12", nullable = false, length = 1)
	public char getDism12() {
		return this.dism12;
	}

	public void setDism12(char dism12) {
		this.dism12 = dism12;
	}

	@Column(name = "disSenha", length = 23)
	public String getDisSenha() {
		return this.disSenha;
	}

	public void setDisSenha(String disSenha) {
		this.disSenha = disSenha;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Repasse> getTblRepasses() {
		return this.repasses;
	}

	public void setTblRepasses(Set<Repasse> repasses) {
		this.repasses = repasses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tbl_ForEclesiasticasDiscipulos", catalog = "pais", joinColumns = { @JoinColumn(name = "disCod", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "forCod", nullable = false, updatable = false) })
	public Set<FormacaoEclesiasticas> getTblFormacaoEclesiasticases() {
		return this.tblFormacaoEclesiasticases;
	}

	public void setTblFormacaoEclesiasticases(
			Set<FormacaoEclesiasticas> tblFormacaoEclesiasticases) {
		this.tblFormacaoEclesiasticases = tblFormacaoEclesiasticases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Discipulos> getTblDiscipuloses() {
		return this.tblDiscipuloses;
	}

	public void setTblDiscipuloses(Set<Discipulos> tblDiscipuloses) {
		this.tblDiscipuloses = tblDiscipuloses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tbl_Participa", catalog = "pais", joinColumns = { @JoinColumn(name = "disCod", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "EncCod", nullable = false, updatable = false) })
	public Set<Encontros> getTblEncontroses() {
		return this.tblEncontroses;
	}

	public void setTblEncontroses(Set<Encontros> tblEncontroses) {
		this.tblEncontroses = tblEncontroses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "tbl_ForAcademicaDiscipulos", catalog = "pais", joinColumns = { @JoinColumn(name = "disCod", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ForCod", nullable = false, updatable = false) })
	public Set<FormacaoAcademica> getTblFormacaoAcademicas() {
		return this.formacaoAcademicas;
	}

	public void setTblFormacaoAcademicas(
			Set<FormacaoAcademica> formacaoAcademicas) {
		this.formacaoAcademicas = formacaoAcademicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<Documentos> getTblDocumentoses() {
		return this.tblDocumentoses;
	}

	public void setTblDocumentoses(Set<Documentos> tblDocumentoses) {
		this.tblDocumentoses = tblDocumentoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "discipulos")
	public Set<FunEclesiasticasDiscipulos> getTblFunEclesiasticasDiscipuloses() {
		return this.tblFunEclesiasticasDiscipuloses;
	}

	public void setTblFunEclesiasticasDiscipuloses(
			Set<FunEclesiasticasDiscipulos> tblFunEclesiasticasDiscipuloses) {
		this.tblFunEclesiasticasDiscipuloses = tblFunEclesiasticasDiscipuloses;
	}

}
