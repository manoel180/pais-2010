package br.com.pais.entities;

// Generated 23/01/2011 05:07:33 by Hibernate Tools 3.4.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Bases generated by hbm2java
 */
@Entity
@Table(name = "bases", catalog = "wwwpais_sistema", uniqueConstraints = @UniqueConstraint(columnNames = "basNuEndereco"))
public class Bases implements java.io.Serializable {

	private Integer basCod;
	private Discipulos discipulosByLiderGovJusto;
	private Discipulos discipulosByBasDisCod;
	private Logradouro logradouro;
	private Zona zona;
	private Statusbase statusbase;
	private Discipulos discipulosByLiderAcaoSocial;
	private Condicaobase condicaobase;
	private Tipobases tipobases;
	private Date basHorReuniao;
	private String basDiaReuniao;
	private Date basDtAbertura;
	private String basNuEndereco;
	private String basEndComplemento;
	private String basTelFixo;
	private String basTelCelular;
	private Integer basQtdMax;
	private List<Celulas> celulases;
	private Set<Movimento> movimentos = new HashSet<Movimento>(0);
	private List<Fotosbases> fotosbaseses ;

	

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "basCod", unique = true, nullable = false)
	public Integer getBasCod() {
		return this.basCod;
	}

	public void setBasCod(Integer basCod) {
		this.basCod = basCod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "liderGovJusto")
	public Discipulos getDiscipulosByLiderGovJusto() {
		return this.discipulosByLiderGovJusto;
	}

	public void setDiscipulosByLiderGovJusto(
			Discipulos discipulosByLiderGovJusto) {
		this.discipulosByLiderGovJusto = discipulosByLiderGovJusto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "basDisCod", nullable = false)
	public Discipulos getDiscipulosByBasDisCod() {
		return this.discipulosByBasDisCod;
	}

	public void setDiscipulosByBasDisCod(Discipulos discipulosByBasDisCod) {
		this.discipulosByBasDisCod = discipulosByBasDisCod;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "basEndereco")
	public Logradouro getLogradouro() {
		return this.logradouro;
	}

	public void setLogradouro(Logradouro logradouro) {
		this.logradouro = logradouro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "zona", nullable = false)
	public Zona getZona() {
		return this.zona;
	}

	public void setZona(Zona zona) {
		this.zona = zona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "basStatus")
	public Statusbase getStatusbase() {
		return this.statusbase;
	}

	public void setStatusbase(Statusbase statusbase) {
		this.statusbase = statusbase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "liderAcaoSocial")
	public Discipulos getDiscipulosByLiderAcaoSocial() {
		return this.discipulosByLiderAcaoSocial;
	}

	public void setDiscipulosByLiderAcaoSocial(
			Discipulos discipulosByLiderAcaoSocial) {
		this.discipulosByLiderAcaoSocial = discipulosByLiderAcaoSocial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "basCondicao")
	public Condicaobase getCondicaobase() {
		return this.condicaobase;
	}

	public void setCondicaobase(Condicaobase condicaobase) {
		this.condicaobase = condicaobase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tpbCod", nullable = false)
	public Tipobases getTipobases() {
		return this.tipobases;
	}

	public void setTipobases(Tipobases tipobases) {
		this.tipobases = tipobases;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "basHorReuniao", length = 8)
	public Date getBasHorReuniao() {
		return this.basHorReuniao;
	}

	public void setBasHorReuniao(Date basHorReuniao) {
		this.basHorReuniao = basHorReuniao;
	}

	@Column(name = "basDiaReuniao", length = 13)
	public String getBasDiaReuniao() {
		return this.basDiaReuniao;
	}

	public void setBasDiaReuniao(String basDiaReuniao) {
		this.basDiaReuniao = basDiaReuniao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "basDtAbertura", length = 10)
	public Date getBasDtAbertura() {
		return this.basDtAbertura;
	}

	public void setBasDtAbertura(Date basDtAbertura) {
		this.basDtAbertura = basDtAbertura;
	}

	@Column(name = "basNuEndereco", unique = true, length = 5)
	public String getBasNuEndereco() {
		return this.basNuEndereco;
	}

	public void setBasNuEndereco(String basNuEndereco) {
		this.basNuEndereco = basNuEndereco;
	}

	@Column(name = "basEndComplemento", length = 45)
	public String getBasEndComplemento() {
		return this.basEndComplemento;
	}

	public void setBasEndComplemento(String basEndComplemento) {
		this.basEndComplemento = basEndComplemento;
	}

	@Column(name = "basTelFixo", length = 15)
	public String getBasTelFixo() {
		return this.basTelFixo;
	}

	public void setBasTelFixo(String basTelFixo) {
		this.basTelFixo = basTelFixo;
	}

	@Column(name = "basTelCelular", length = 15)
	public String getBasTelCelular() {
		return this.basTelCelular;
	}

	public void setBasTelCelular(String basTelCelular) {
		this.basTelCelular = basTelCelular;
	}

	@Column(name = "basQtdMax")
	public Integer getBasQtdMax() {
		return this.basQtdMax;
	}

	public void setBasQtdMax(Integer basQtdMax) {
		this.basQtdMax = basQtdMax;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bases")
	public List<Celulas> getCelulases() {
		return this.celulases;
	}

	public void setCelulases(List<Celulas> celulases) {
		this.celulases = celulases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bases")
	public Set<Movimento> getMovimentos() {
		return this.movimentos;
	}

	public void setMovimentos(Set<Movimento> movimentos) {
		this.movimentos = movimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bases")
	public List<Fotosbases> getFotosbaseses() {
		return this.fotosbaseses;
	}

	public void setFotosbaseses(List<Fotosbases> fotosbaseses) {
		this.fotosbaseses = fotosbaseses;
	}

}
